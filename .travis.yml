dist: trusty
sudo: false
language: cpp
branches:
  only:
    - master
git:
  depth: 1
matrix:
  include:
    - os: linux
      compiler: clang
      addons:
        apt:
          packages: ['clang-3.5']
      env: CXX_COMPILER=clang++-3.5 C_COMPILER=clang-3.5 BUILD_TYPE='Release'

    - os: linux
      compiler: clang
      addons:
        apt:
          packages: ['clang-3.6']
      env: CXX_COMPILER=clang++-3.6 C_COMPILER=clang-3.6 BUILD_TYPE='Release'

    - os: linux
      dist: precise # required because trusty have no clang v3.7
      compiler: clang
      addons:
        apt:
          sources: ['llvm-toolchain-precise-3.7', 'ubuntu-toolchain-r-test']
          packages: ['clang-3.7']
      env: CXX_COMPILER=clang++-3.7 C_COMPILER=clang-3.7 BUILD_TYPE='Release'

    - os: linux
      compiler: clang
      addons:
        apt:
          packages: ['clang-3.8']
      env: CXX_COMPILER=clang++-3.8 C_COMPILER=clang-3.8 BUILD_TYPE='Release'

    - os: linux
      compiler: clang
      addons:
        apt:
          packages: ['clang-3.9']
      env: CXX_COMPILER=clang++-3.9 C_COMPILER=clang-3.9 BUILD_TYPE='Release'

    - os: linux
      compiler: clang
      addons:
        apt:
          sources: ['llvm-toolchain-trusty-4.0']
          packages: ['clang-4.0']
      env: CXX_COMPILER=clang++-4.0 C_COMPILER=clang-4.0 BUILD_TYPE='Release'

    - os: linux
      compiler: clang
      addons:
        apt:
          sources: ['llvm-toolchain-trusty-5.0']
          packages: ['clang-5.0']
      env: CXX_COMPILER=clang++-5.0 C_COMPILER=clang-5.0 BUILD_TYPE='Release'

    - os: linux
      compiler: clang
      addons:
        apt:
          sources: ['llvm-toolchain-trusty-6.0', 'ubuntu-toolchain-r-test']
          packages: ['clang-6.0']
      env: CXX_COMPILER=clang++-6.0 C_COMPILER=clang-6.0 BUILD_TYPE='Release'

    - os: linux
      compiler: clang
      addons:
        apt:
          sources: ['llvm-toolchain-trusty-7', 'ubuntu-toolchain-r-test']
          packages: ['clang-7']
      env: CXX_COMPILER=clang++-7 C_COMPILER=clang-7 BUILD_TYPE='Release'

    - os: linux
      dist: precise # required because tests will failed use threads on trusty
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-4.8']
      env: CXX_COMPILER=g++-4.8 C_COMPILER=gcc-4.8 BUILD_TYPE='Release'

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-4.9']
      env: CXX_COMPILER=g++-4.9 C_COMPILER=gcc-4.9 BUILD_TYPE='Release'

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-5']
      env: CXX_COMPILER=g++-5 C_COMPILER=gcc-5 BUILD_TYPE='Release'

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-6']
      env: CXX_COMPILER=g++-6 C_COMPILER=gcc-6 BUILD_TYPE='Release'

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-7']
      env: CXX_COMPILER=g++-7 C_COMPILER=gcc-7 BUILD_TYPE='Release'

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-8']
      env: CXX_COMPILER=g++-8 C_COMPILER=gcc-8 BUILD_TYPE='Release'

    - os: osx
      osx_image: xcode7.3
      compiler: clang
      env: CXX_COMPILER=clang++ C_COMPILER=clang BUILD_TYPE='Release'

    - os: osx
      osx_image: xcode8
      compiler: clang
      env: CXX_COMPILER=clang++ C_COMPILER=clang BUILD_TYPE='Release'

    - os: osx
      osx_image: xcode8.3
      compiler: clang
      env: CXX_COMPILER=clang++ C_COMPILER=clang BUILD_TYPE='Release'

    - os: osx
      osx_image: xcode9
      compiler: clang
      env: CXX_COMPILER=clang++ C_COMPILER=clang BUILD_TYPE='Release'

    - os: osx
      osx_image: xcode9.1
      compiler: clang
      env: CXX_COMPILER=clang++ C_COMPILER=clang BUILD_TYPE='Release'

    - os: osx
      osx_image: xcode9.2
      compiler: clang
      env: CXX_COMPILER=clang++ C_COMPILER=clang BUILD_TYPE='Release'

    - os: osx
      osx_image: xcode9.3
      compiler: clang
      env: CXX_COMPILER=clang++ C_COMPILER=clang BUILD_TYPE='Release'

    - os: osx
      osx_image: xcode9.4
      compiler: clang
      env: CXX_COMPILER=clang++ C_COMPILER=clang BUILD_TYPE='Release'

    - os: osx
      osx_image: xcode10
      compiler: clang
      env: CXX_COMPILER=clang++ C_COMPILER=clang BUILD_TYPE='Release'

install:
  - if [[ "${TRAVIS_OS_NAME}" == "osx" ]];
    then
      cmake --version || brew install cmake;
    fi
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]];
    then
      if dpkg --compare-versions $(cmake --version | head -1| awk '{print $3}') lt "3.1"
      then
        CMAKE_URL="https://cmake.org/files/v3.8/cmake-3.8.1-Linux-x86_64.tar.gz"
        mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
        export PATH=${PWD}/cmake/bin:${PATH}
        cmake --version
      fi
    fi

script:
  - mkdir build
  - cd build
  - cmake -DBUILD_ALL=ON -DCMAKE_INSTALL_PREFIX=installed_files -DCMAKE_C_COMPILER=$C_COMPILER -DCMAKE_CXX_COMPILER=$CXX_COMPILER -DCMAKE_BUILD_TYPE=Release ../dev/
  - make -j4
  - ctest --output-on-failure -j2

notifications:
  email:
    recipients:
      - eao197@gmail.com
#    on_success: always
#    on_failure: always
